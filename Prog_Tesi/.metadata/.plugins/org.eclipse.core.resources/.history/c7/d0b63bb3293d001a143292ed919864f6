package siope.demo.controller;

import org.json.simple.JSONObject;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RestController;

import java.io.BufferedInputStream;
import java.io.BufferedOutputStream;
import java.io.File;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.InputStream;
import java.util.TreeMap;
import java.util.stream.Stream;
import java.util.zip.ZipEntry;
import java.util.zip.ZipFile;


@RestController
@RequestMapping("/")
public class siopeController {
	
	TreeMap<String,JSONObject> map = new TreeMap<String,JSONObject>();
	
	@SuppressWarnings("unchecked")
	@RequestMapping(method = RequestMethod.POST)
	public  JSONObject  UploadFlussoOrdinativi(@RequestBody ZipFile fzip) {
		JSONObject obj = new JSONObject();
		File fp =new  File("pathname");
		unzip(fzip,"pathname");
		obj.put("pathname",fp);
		map.put("pathname", obj);
		return obj;
	}


	private static void unzip(ZipFile fzip, String destDirPath) {
		Stream<? extends ZipEntry> stream = fzip.stream();
		stream.forEach(zipEntry -> {
			byte[] buffer = new byte[1024];
			try (InputStream inputStream = fzip.getInputStream(zipEntry);
					BufferedInputStream bufferInStream = new BufferedInputStream(inputStream);
					BufferedOutputStream bufferOutStream = new BufferedOutputStream(
							new FileOutputStream(destDirPath + File.separator + zipEntry.getName()));) {
				int bytes = 0;
				while ((bytes = bufferInStream.read(buffer)) > 0) {
					bufferOutStream.write(buffer, 0, bytes);
					bufferOutStream.flush();
				}
			} catch (IOException e) {
				e.printStackTrace();
			}
		});

	}
}