package OpWithDB;

//STEP 1. Import required packages
import java.sql.*;

public class OpWithDB {
	 static  String JDBC_DRIVER;
	 static  String DB_URL;
	 static  String USER;
	 static  String PASS;
	 
	public OpWithDB() {
	 // JDBC driver name and database URL
	  JDBC_DRIVER = "sap.jdbc4.sqlanywhere.IDriver";  
	  DB_URL = "jdbc:sqlanywhere:DSN=DBS";

	 //  Database credentials
	  USER = "gianmaria";
	  PASS = "golem.123";
	}
	public int GET_IDENTITY(String Tab) {
		 Connection conn = null;
		 Statement stmt = null;
		 Integer i = null;
		 try{
		    //STEP 2: Register JDBC driver
		    Class.forName("sap.jdbc4.sqlanywhere.IDriver");
		
		    //STEP 3: Open a connection
		    conn = DriverManager.getConnection(DB_URL,USER,PASS);
		
		    //STEP 4: Execute a query
		    stmt = conn.createStatement();
		    
		    String  sql = "SELECT GET_IDENTITY( '"+Tab+"' )";
		    ResultSet rs = stmt.executeQuery(sql);
		    rs.next();
		    i = rs.getInt(1);
		    //STEP 5: Extract data from result set
		    //STEP 6: Clean-up environment
		    rs.close();
		    stmt.close();
		    conn.close();
		    
		 }catch(SQLException se){se.printStackTrace(); }
		  catch(Exception e){e.printStackTrace(); }
		  
		 finally{
		    
			try{
		     
				if(stmt!=null) stmt.close();
				
		    }catch(SQLException se2){}
			
		    try{
		    	
		       if(conn!=null) conn.close();
		       
		    }catch(SQLException se){ se.printStackTrace(); }
		    
		 }
		 return i;
	 	}
	public String[] CercaOperatore(String IDOperatore, String IDEnte, String password) {
		Connection conn = null;
		 Statement stmt = null;
		 String Request = "";
		 String[] s = new String[5];
		 try{
		    //STEP 2: Register JDBC driver
		    Class.forName("sap.jdbc4.sqlanywhere.IDriver");
		
		    //STEP 3: Open a connection
		    conn = DriverManager.getConnection(DB_URL,USER,PASS);
		
		    //STEP 4: Execute a query
		    stmt = conn.createStatement();
		    Request = "SELECT o.Nome, o.Cognome, e.IDEnte, e.StrutturaIPA, e.CodiceA2A  "
		    		+ "FROM Operatori AS o INNER JOIN Enti AS e ON  e.IDEnte = o.IDEnte "
		    		+ "WHERE o.IDOperatore="+IDOperatore+" AND o.IDEnte="+IDEnte+" AND o.password="+password;
		    
		    ResultSet rs = stmt.executeQuery(Request);
		 while(rs.next()) { 
			 
		  s[0] =rs.getString("Nome");
		  s[1] = rs.getString("Cognome");
		  s[2] = String.valueOf(rs.getInt("IDEnte")) ;
		  s[3] = rs.getString("StrutturaIPA");
		  s[4] = rs.getString("CodiceA2A");
		  
		 }
		    
		    //STEP 6: Clean-up environment
		    rs.close();
		    stmt.close();
		    conn.close();
		    
		 }catch(SQLException se){se.printStackTrace(); }
		  catch(Exception e){e.printStackTrace(); }
		  
		 finally{
		    
			try{
		     
				if(stmt!=null) stmt.close();
				
		    }catch(SQLException se2){}
			
		    try{
		    	
		       if(conn!=null) conn.close();
		       
		    }catch(SQLException se){ se.printStackTrace(); }
		    
		 }
		 return s;
	}
	public String INSERT(String Request) {
	 Connection conn = null;
	 Statement stmt = null;
	 try{
	    //STEP 2: Register JDBC driver
	    Class.forName("sap.jdbc4.sqlanywhere.IDriver");
	
	    //STEP 3: Open a connection
	    conn = DriverManager.getConnection(DB_URL,USER,PASS);
	
	    //STEP 4: Execute a query
	    stmt = conn.createStatement();
	    
	    stmt.executeQuery(Request);
	    
	    //STEP 6: Clean-up environment
	    
	    stmt.close();
	    conn.close();
	    
	 }catch(SQLException se){se.printStackTrace(); }
	  catch(Exception e){e.printStackTrace(); }
	  
	 finally{
	    
		try{
	     
			if(stmt!=null) stmt.close();
			
	    }catch(SQLException se2){}
		
	    try{
	    	
	       if(conn!=null) conn.close();
	       
	    }catch(SQLException se){ se.printStackTrace(); }
	    
	 }
	 return "ok";
 	}
 
	public String SELECTFS(String Tab, String Prog, String DataUploadDa, String DataUploadA) {
	 Connection conn = null;
	 Statement stmt = null;
	 String s = "";
	 try{
	    //STEP 2: Register JDBC driver
	    Class.forName("sap.jdbc4.sqlanywhere.IDriver");
	
	    //STEP 3: Open a connection
	    conn = DriverManager.getConnection(DB_URL,USER,PASS);
	
	    //STEP 4: Execute a query
	    stmt = conn.createStatement();
	    String sql = "SELECT * FROM " + Tab ;
	    
	    if(Prog != null || DataUploadDa!=null || DataUploadA!=null) {
	    	sql = sql + " WHERE ";
	    	if(Prog != null) { sql = sql + Prog + " AND ";}
	    	if(DataUploadDa != null) {sql = sql + DataUploadDa + " AND ";}
	    	if(DataUploadA != null)	{sql = sql + DataUploadA + " AND ";}
	    	sql = sql + " 1 = 1 ";
	    }
	    
	    ResultSet rs = stmt.executeQuery(sql);
	    
	    //STEP 5: Extract data from result set
	    s = formaRisultSELECT(Tab,rs);
	    
	    //STEP 6: Clean-up environment
	    rs.close();
	    stmt.close();
	    conn.close();
	    
	 }catch(SQLException se){se.printStackTrace(); }
	  catch(Exception e){e.printStackTrace(); }
	  
	 finally{
	    
		try{
	     
			if(stmt!=null) stmt.close();
			
	    }catch(SQLException se2){}
		
	    try{
	    	
	       if(conn!=null) conn.close();
	       
	    }catch(SQLException se){ se.printStackTrace(); }
	    
	 }
	 return s;
 	}
 
	private String formaRisultSELECT(String Tab, ResultSet rs) throws SQLException {
	 String s = "";
	 
	 switch(Tab) {
	 
	 	case("FlussoCaricato"):
			while(rs.next()){
				
		     int idFlussoC  = rs.getInt("IDFlussoC");
		     int idEnte = rs.getInt("IDEnte");
		     String Ente = rs.getString("Ente");
		     String StrutturaIPA = rs.getString("StrutturaIPA");
		     int Esercizio = rs.getInt("Esercizio");
		     String NomeFile = rs.getString("NomeFile");
		     String Stato = rs.getString("Stato");
		     String DataCaricamento = rs.getString("DataCaricamento");
		     int NumOrdPresenti = rs.getInt("NumOrdinativiPresenti");
		     int NumErroriDiImportazione = rs.getInt("NumErroriDiImportazione");
		  
		    s = s +  "IDFlussoC: " + String.valueOf(idFlussoC) +
		    		 ", IDEnte: " + String.valueOf(idEnte) +
		    		 ", Ente: " + Ente +
		    		 ", StrutturaIPA: " + StrutturaIPA + 
		    		 ", Esercizio: " + String.valueOf(Esercizio) +
		    		 ", NomeFile: " + NomeFile +
		    		 ", Stato: " + Stato + 
		    		 ", DataCaricamento: " + DataCaricamento + 
		    		 ", NumeroOrdinativiPresenti: " + String.valueOf(NumOrdPresenti) +
		    		 ", NumErroriDiImportazione: " + String.valueOf(NumErroriDiImportazione) +"\n";
		    }
	 	case("OPI"):
	 		while(rs.next()){
				
			     int NumOrdinativo  = rs.getInt("NumOrdinativo");
			     int IDFlussoC  = rs.getInt("IDFlussoC");
			     String StrutturaIPA = rs.getString("StrutturaIPA");
			     int Esercizio = rs.getInt("Esercizio");
			     String TipoOrdinativo = rs.getString("TipoOrdinativo");
			     String Stato = rs.getString("Stato");
			     String Versione = rs.getString("Versione");
			     String DataOrdinativo = rs.getString("DataOrdinativo");
			     int Importo = rs.getInt("Importo");
			     int SubContenuti = rs.getInt("SubContenuti");
			     String Ente = rs.getString("Ente");
			    
	
			    s = s + "NumOrdinativo: " + String.valueOf(NumOrdinativo) +
			    		", IDFlussoC: " + String.valueOf(IDFlussoC) +
			    		", StrutturaIPA: " + StrutturaIPA +
			    		", Esercizio: " + String.valueOf(Esercizio) +
			    		", TipoOrdinativo: " + TipoOrdinativo +
			    		", Stato: " + Stato +
			    		", Versione: " + Versione +
			    		", DataOrdinativo: " + DataOrdinativo + 
			    		", Importo: " + String.valueOf(Importo) +
			    		", SubContenuti: " + String.valueOf(SubContenuti) +
			    		", Ente: " + Ente  +"\n";
			 }
	 	break;
	 	
	 	case("RicevuteServizio"): 
	 		while(rs.next()){
				
			     int ProgFlusso  = rs.getInt(1);
			     String StrutturaIPA = rs.getString(3);
			     String Stato = rs.getString(4);
			     String DataUpload = rs.getString(5);
			     int IDEnte = rs.getInt(6);
			     byte[]RicServizioZip = rs.getBytes(8);
			     
			    
			     s = s +"Ente: " + String.valueOf(IDEnte) +
			    		", StrutturaIPA: " + StrutturaIPA +
			     		", ProgFlusso: " + String.valueOf(ProgFlusso) +
			     		", Stato: " + Stato +
			    		", DataUpload: " + DataUpload +"\n";
			     
			     }
	 	break;
	 

	 	case("RicevuteApplicativo"): 
	 		while(rs.next()){
				
	 			int ProgEsitoApplicativo  = rs.getInt(1);
			     String StrutturaIPA = rs.getString(3);
			     String Stato = rs.getString(4);
			     String DataUpload = rs.getString(5);
			     int IDEnte = rs.getInt(6);
			     byte[]RicApplZip = rs.getBytes(8);
			     
			    
			     s = s +"Ente: " + String.valueOf(IDEnte) +
			    		", StrutturaIPA: " + StrutturaIPA +
			     		", ProgEsitoApplicativo: " + String.valueOf(ProgEsitoApplicativo) +
			     		", Stato: " + Stato +
			    		", DataUpload: " + DataUpload + "\n";
			 }
	 	break;
	 	
	 	case("GiornaliDiCassa"): 
	 		while(rs.next()){
				
	 			int ProgGiornaleCassa  = rs.getInt(1);
			     String StrutturaIPA = rs.getString(3);
			     String Stato = rs.getString(4);
			     String DataUpload = rs.getString(5);
			     int IDEnte = rs.getInt(6);
			     byte[]GiornCassaZip = rs.getBytes(8);
			     
			    
			     s = s +"Ente: " + String.valueOf(IDEnte) +
			    		", StrutturaIPA: " + StrutturaIPA +
			     		", ProgGiornaleCassa: " + String.valueOf(ProgGiornaleCassa) +
			     		", Stato: " + Stato +
			    		", DataUpload: " + DataUpload +"\n";
			    
			 }
	 	break;
	 		
	 }
	return s;
 }
 
 
}
